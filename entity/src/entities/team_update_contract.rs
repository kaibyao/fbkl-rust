//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "team_update_contract")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub action_type: i16,
    pub team_update_id: i64,
    pub contract_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::contract::Entity",
        from = "Column::ContractId",
        to = "super::contract::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Contract,
    #[sea_orm(
        belongs_to = "super::team_update::Entity",
        from = "Column::TeamUpdateId",
        to = "super::team_update::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TeamUpdate,
}

impl Related<super::contract::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Contract.def()
    }
}

impl Related<super::team_update::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TeamUpdate.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
