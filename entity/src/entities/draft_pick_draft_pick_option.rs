//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "draft_pick_draft_pick_option")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub draft_pick_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub draft_pick_option_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::draft_pick::Entity",
        from = "Column::DraftPickId",
        to = "super::draft_pick::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    DraftPick,
    #[sea_orm(
        belongs_to = "super::draft_pick_option::Entity",
        from = "Column::DraftPickOptionId",
        to = "super::draft_pick_option::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    DraftPickOption,
}

impl Related<super::draft_pick::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DraftPick.def()
    }
}

impl Related<super::draft_pick_option::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DraftPickOption.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
