//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.2

use async_graphql::Enum;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

/// A Deadline is the date & time at which specific things happen over the course of a league season.
#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "deadline")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub date_time: DateTimeWithTimeZone,
    pub deadline_type: DeadlineType,
    pub name: String,
    pub season_end_year: i16,
    pub league_id: i64,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

/// The different types of deadlines that happen in a league.
#[derive(
    Debug, Clone, Copy, Enum, Eq, PartialEq, EnumIter, DeriveActiveEnum, Serialize, Deserialize,
)]
#[sea_orm(rs_type = "i16", db_type = "Integer")]
pub enum DeadlineType {
    /// Standard weekly lock that happens on Mondays (our start of the weekly matchups) at the first tip-off of the day.
    #[sea_orm(num_value = 0)]
    InSeasonRosterLock,
    /// The first roster lock of a season that determines which contracts from the previous season are kept + advanced. Happens before the veteran auction and rookie draft. Cap is increased from $200 to $210 after this time.
    #[sea_orm(num_value = 1)]
    PreseasonKeeper,
    /// The start date & time of the veteran (RFA/UFA/FA) auction. Open bidding is allowed after the last predetermined contracts auction starts.
    #[sea_orm(num_value = 2)]
    VeteranAuctionStart,
    /// The start date & time of the rookie draft. Draft picks for the current season +2 can be traded after this is finished.
    #[sea_orm(num_value = 3)]
    RookieDraftStart,
    /// Following the rookie draft, rosters must be finalized by this date. Week 1 FA auctions open after this.
    #[sea_orm(num_value = 4)]
    FinalPreseasonRosterLock,
    /// Owners cannot nominate new FA auctions after this.
    #[sea_orm(num_value = 5)]
    FreeAgentAuctionEnd,
    /// Roster cap increases after this deadline.
    #[sea_orm(num_value = 6)]
    PostSeasonCapIncrease,
    /// Trades cannot be completed after this time.
    #[sea_orm(num_value = 7)]
    TradeDeadline,
    /// Season ends at this time.
    #[sea_orm(num_value = 8)]
    SeasonEnd,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::league::Entity",
        from = "Column::LeagueId",
        to = "super::league::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    League,
    #[sea_orm(has_many = "super::transaction::Entity")]
    Transaction,
}

impl Related<super::league::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::League.def()
    }
}

impl Related<super::transaction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Transaction.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
